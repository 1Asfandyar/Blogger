test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# amazon:
#   service: S3
#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>
#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>
#   region: us-east-1
#   bucket: your_own_bucket
cloudinary:
  service: Cloudinary
# Remember not to checkin your GCS keyfile to a repository
# google:
#   service: GCS
#   project: "devblogger-project"
#   credentials:
#     type: <%= Rails.application.credentials.TYPE%>
#     project_id: <%= Rails.application.credentials.PROJECT_ID%>
#     private_key_id: <%= Rails.application.credentials.PRIVATE_KEY_ID%>
#     private_key: <%= Rails.application.credentials.PRIVATE_KEY%>
#     client_email: <%= Rails.application.credentials.CLIENT_EMAIL%>
#     client_id: <%= Rails.application.credentials.CLIENT_ID%>
#     auth_uri: <%= Rails.application.credentials.AUTH_URI%>
#     token_uri: <%= Rails.application.credentials.TOKEN_URI%>
#     auth_provider_x509_cert_url: <%= Rails.application.credentials.AUTH_PROVIDER_X509_CERT_URL%>
#     client_x509_cert_url: <%= Rails.application.credentials.CLIENT_X509_CERT_URL%>
#   bucket: devbloggerbucket

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
